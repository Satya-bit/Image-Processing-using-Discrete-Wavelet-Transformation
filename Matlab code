function outimage = imgfusion(Im1, Im2, ftype, wtype)
    [cA1, cH1, cV1, cD1] = dwt2(double(Im1), wtype, 'per');
    [cA2, cH2, cV2, cD2] = dwt2(double(Im2), wtype, 'per');
    [r,c] = size(cA1);
    cA = zeros(r , c);
    cH = zeros(r , c);
    cV = zeros(r , c);
    cD = zeros(r , c);
    
    switch ftype  
        case 'MeanMean'
            for i=1:r
                for k=1:c
                    cA(i,k) = mean([cA1(i,k), cA2(i,k)]);
                    cH(i,k) = mean([cH1(i,k), cH2(i,k)]);
                    cV(i,k) = mean([cV1(i,k), cV2(i,k)]);
                    cD(i,k) = mean([cD1(i,k), cD2(i,k)]);
                end
            end
            
        case 'MeanMax'
            for i=1:r
                for k=1:c
                    cA(i,k) = mean([cA1(i,k), cA2(i,k)]);
                    cH(i,k) = max([cH1(i,k), cH2(i,k)]);
                    cV(i,k) = max([cV1(i,k), cV2(i,k)]);
                    cD(i,k) = max([cD1(i,k), cD2(i,k)]);
                end
            end
            
        case 'MeanMin'
            for i=1:r
                for k=1:c
                    cA(i,k) = mean([cA1(i,k), cA2(i,k)]);
                    cH(i,k) = min([cH1(i,k), cH2(i,k)]);
                    cV(i,k) = min([cV1(i,k), cV2(i,k)]);
                    cD(i,k) = min([cD1(i,k), cD2(i,k)]);
                end
            end
            
         case 'MinMean'
            for i=1:r
                for k=1:c
                    cA(i,k) = min([cA1(i,k), cA2(i,k)]);
                    cH(i,k) = mean([cH1(i,k), cH2(i,k)]);
                    cV(i,k) = mean([cV1(i,k), cV2(i,k)]);
                    cD(i,k) = mean([cD1(i,k), cD2(i,k)]);
                end
            end
            
         case 'MinMin'
            for i=1:r
                for k=1:c
                    cA(i,k) = min([cA1(i,k), cA2(i,k)]);
                    cH(i,k) = min([cH1(i,k), cH2(i,k)]);
                    cV(i,k) = min([cV1(i,k), cV2(i,k)]);
                    cD(i,k) = min([cD1(i,k), cD2(i,k)]);
                end
            end   

         case 'MinMax'
            for i=1:r
                for k=1:c
                    cA(i,k) = min([cA1(i,k), cA2(i,k)]);
                    cH(i,k) = max([cH1(i,k), cH2(i,k)]);
                    cV(i,k) = max([cV1(i,k), cV2(i,k)]);
                    cD(i,k) = max([cD1(i,k), cD2(i,k)]);
                end
            end   
            
         case 'MaxMax'
            for i=1:r
                for k=1:c
                    cA(i,k) = max([cA1(i,k), cA2(i,k)]);
                    cH(i,k) = max([cH1(i,k), cH2(i,k)]);
                    cV(i,k) = max([cV1(i,k), cV2(i,k)]);
                    cD(i,k) = max([cD1(i,k), cD2(i,k)]);
                end
            end
            
         case 'MaxMin'
            for i=1:r
                for k=1:c
                    cA(i,k) = max([cA1(i,k), cA2(i,k)]);
                    cH(i,k) = min([cH1(i,k), cH2(i,k)]);
                    cV(i,k) = min([cV1(i,k), cV2(i,k)]);
                    cD(i,k) = min([cD1(i,k), cD2(i,k)]);
                end
            end
            
          case 'MaxMean'
            for i=1:r
                for k=1:c
                    cA(i,k) = max([cA1(i,k), cA2(i,k)]);
                    cH(i,k) = mean([cH1(i,k), cH2(i,k)]);
                    cV(i,k) = mean([cV1(i,k), cV2(i,k)]);
                    cD(i,k) = mean([cD1(i,k), cD2(i,k)]);
                end
            end   
            
    end
    
 outimage = idwt2(cA, cH, cV, cD, wtype, 'per');

%Asking user the combination of fusion1 and fusion2
fusiontype = input("Enter your combination :",'s');
wavetype = 'coif5';

%Load Image-1
[filename1, pathname1]= uigetfile('*.*','Select your First Image');
filewithpath1= strcat(pathname1, filename1);
img1= imread(filewithpath1);

%Load Image-2
[filename2, pathname2]= uigetfile('*.*','Select your Second Image');
filewithpath2= strcat(pathname2, filename2);
img2= imread(filewithpath2);

[row, col]= size(img1(:,:,1));

if ~isequal(size(img1),size(img2))
    img2=imresize(img2,[row,col]);
end

%Perfoming D.W.T.and I.D.W.T. on each colour channel i.e. Red, Green and Blue.
fusedimageR= imgfusion(img1(:,:,1), img2(:,:,1), fusiontype, wavetype);
fusedimageG= imgfusion(img1(:,:,2), img2(:,:,2), fusiontype, wavetype);
fusedimageB= imgfusion(img1(:,:,3), img2(:,:,3), fusiontype, wavetype);

%Combining all 3 colour channels to order to get final output image.
fusedimage= uint8(cat(3, fusedimageR, fusedimageG, fusedimageB));

imwrite(imresize(fusedimage, [row,col]), 'fusedimage.jpg', 'Quality', 100);

subplot(131)
imshow(img1)
title('Image 1')

subplot(132)
imshow(img2)
title('Image 2')

subplot(133)
imshow(fusedimage)
title('Final Output of fused Image')


